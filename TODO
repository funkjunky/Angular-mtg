TODO
---
- write the deck builder
	- add the textboxes for main and sideboard
		-add the filter that takes the models and turns them into text
		-add the onchange to update the models by the text
	- add save button [it wont do anything]
-git commit to master, then branch to dev for future development.
- write the sealed pool app
	- basically, we'll choose the cards for the packs, then show them to the user, then provide a button that the user can press to be brought to the deck building page with the pool as the pool, and all cards in the pool are put in the sideboard to start.
- write a node app that can server the pages, also that gives a service to save decks, and can server the json files and images.
- figure out how the draft tool will work seamlessly [with netowkring and such]
- write the draft tool
- test the draft tool with 2 different computers of my own. Use a proxy if it happens to be necessary.
- convert everything to use pouchDB
	[use index of card number and set combined]
- replicate pouchDB to couchDB on server
- figure out if we should even have a serverside? If so how to do it minimilistically??? perhaps with nodejs. Keep in mind we may want semantic value without js... so html served straight up. Technically the drafter could be done without js at all, just requests.
-fix all issues in the issues list.
